openapi: "3.0.3"
info:
  version: "1.0.0"
  title: "Product API"
  description: "An API for managing products"
servers:
  - url: http://localhost:8080
paths:
  /products:
    get:
      tags:
        - Product
      summary: List all products
      operationId: listProducts
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        "400":
          description: "Invalid request payload"
        "500":
          description: "Internal server error"
  
  /product:
    post:
        tags:
          - Product
        summary: Create a new product
        security:
          - bearerAuth: [ ]
        operationId: createProduct
        requestBody:
          description: "Product object to be created"
          required: true
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        responses:
          "201":
            description: "Product created successfully"
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Product"
          "400":
            description: "Invalid request payload"
          "500":
            description: "Internal server error"

  /product/{id}:
    get:
      tags:
        - Product
      summary: Get a product by ID
      operationId: getProduct
      parameters:
        - name: id
          in: path
          description: ID of the product to get
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "400":
          description: "Invalid request payload"
        "404":
          description: "Product not found"
        "500":
          description: "Internal server error"
    put:
      tags:
        - Product
      summary: Update a product by ID
      security:
        - bearerAuth: [ ]
      operationId: updateProduct
      parameters:
        - name: id
          in: path
          description: ID of the product to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: "Product object to be updated"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        "200":
          description: "Product updated successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "400":
          description: "Invalid request payload"
        "404":
          description: "Product not found"
        "500":
          description: "Internal server error"
    delete:
      tags:
        - Product
      summary: Delete a product by ID
      security:
        - bearerAuth: []
      operationId: deleteProduct
      parameters:
        - name: id
          in: path
          description: ID of the product to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: "Product deleted successfully"
        "400":
          description: "Invalid request payload"
        "404":
          description: "Product not found"
        "500":
          description: "Internal server error"

components:
  schemas:
    Product:
      type: object
      properties:
        ID:
          type: integer
          format: int64
          example: 10
        Name:
          type: string
          example: IPhone 14 Pro
        Price:
          type: number
          format: float
          example: 1230.99
          
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT